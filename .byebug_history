c
params[:friend_id]
User.find(4)
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
n
c
Friendship.last
current_user.id
user.user_id
c
@user_supporters.count
c
Friendship.last
current_user.friends
c
cc
c
xc
c
Friendship.last
Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, "false" )
c
Friendship.last
 Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, false )
exit
n
c
exit
c
exit
c
e
c
params[:user_id]
@user
user.id
user_id
user
Friendship.last
Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, false )
current_user.friendships
c
 Friendship.where('removed_friend != true' )
 Friendship.where('removed_friend != false' )
 Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, false )
c
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
   69:       unless friendship.nil?
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
   69:       unless friendship.nil?
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
n
params[:user_id] && params[:friend_id]
c
Friendship.where('user_id !=? AND accepted=? AND friend_id =?', current_user.id, 'approved', current_user.id)
c
Friendship.where('user_id !=? AND accepted=? AND friend_id =?', current_user.id, 'approved', current_user.id).count
Friendship.where('user_id !=? AND accepted=? AND friend_id =?', current_user.id, 'approved', current_user.id) if user_signed_in?
c
n
User.find(7)
User.find(3)
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
n
c
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
params[:user_id] && params[:friend_id]
c
controller_name
(action_name == 'index' && controller_name != "email_messages")
c
controller_name
c
action_name
exit
pp Friendship.all
pp Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id])
Friendship.all
Friendship.find_friend_by_user_and_friend_id(3, 5)
 Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id])
SELECT "friendships".* FROM "friendships"  WHERE (user_id = '3' AND friend_id = '5')
ELECT "friendships".* FROM "friendships"  WHERE (user_id = '3' AND friend_id = '5';5D;5D)
 friendship = Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id])
params[:friend_id]
params[:user_id]
params[:user_id], params[:friend_id]
 Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id])
User.find(3)
params[:user_id]
params[:user_id
User.find(5)
 params[:friend_id]
 Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
n
params[:user_id] && params[:friend_id]
c
User.find(5)
 params[:user_id] && params[:friend_id]
if params[:user_id] && params[:friend_id]
c
User.find(3)
 params[:user_id] && params[:friend_id]
c
x
@user_supporters
c
Friendship
Friendships.last
c
user.present?
user_support
c
x
c
Friendship.where('user_id !=? AND accepted=? AND friend_id =?', current_user.id, 'approved', current_user.id) if user_signed_in?
c
 Friendship.find_unremove_friend.reject{|user| user.friend_id != current_user.id}  if user_signed_in?
c
Friendship.find_unremove_friend.reject{|user| user.friend_id != current_user.id}  if user_signed_in?
c
Friendship.find_unremove_friend.reject{|user| user.friend_id != current_user.id}  if user_signed_in?
Friendship.find_unremove_friend.reject{|user| user.friend_id == current_user.id}  if user_signed_in?
Friendship.find_unremove_friend
current_user.friendships.find_unremove_friend
Friendship.find_unremove_friend.where(friend_id :3)
Friendship.find_unremove_friend.where(friend_id = '3')
Friendship.find_unremove_friend.where(friend_id = 3)
Friendship.find_unremove_friend
current_user
Friendship.find_unremove_friend
friendships.find_unremove_friend
current_user.friendships
current_user.friendships.find_unremove_friend.reject{|user| user.friend_id == current_user.id}
current_user.friendships.find_unremove_friend
current_user.friendships
@user_supporters = current_user.friendships.find_unremove_friend.reject{|user| user.friend_id == current_user.id}  if user_signed_in?
current_user.friendships.find_unremove_friend.reject{|user| user.friend_id == current_user.id}  if user_signed_in?
c
current_user.friendships
current_user
c
current_user.friendships
c
 current_user.friendships
 current_user.friendships.
current_user.friendships.find_unremove_friend.reject{|user| user.friend_id == current_user.id}  if user_signed_in?
c
@user_supporters
c
current_user
Friendship.where('user_id =? AND accepted=? AND friend_id !=?', current_user.id, 'pending', current_user.id)
c
User.find(3)
current_user
Friendship.last
Friendship.where("user_id = 7")
Friendship.where("user_id = 7 AND accepted='pending'")
Friendship.where("user_id = 7 AND accepted='pending')
Friendship.where("user_id = 7 AND accepted='pending' AND friend_id !=7")
Friendship.where("user_id = 7 AND accepted='pending' AND friend_id !='current_user.id'")
Friendship.where("user_id =current_user.id AND accepted='pending' AND friend_id !='current_user.id'")
Friendship.where(user_id =current_user.id AND accepted='pending' AND friend_id !='current_user.id')
Friendship.where('user_id =current_user.id AND accepted='pending' AND friend_id !=current_user.id')
Friendship.where('user_id =? AND accepted=? AND friend_id !=?')
Friendship.where('user_id =? AND accepted=? AND friend_id !=?', current_user.id, 'pending', current_user.id)
 current_user.id
Friendship.last
user_signed_in?
 Friendship.where('user_id =? AND accepted=? AND friend_id !=?', current_user.id, 'pending', current_user.id) if user_signed_in?
SELECT  "users".* FROM "users"  WHERE "users"."id" = 7
Friendship.where('user_id =? AND accepted=? AND friend_id !=?', current_user.id, 'pending', current_user.id) if user_signed_in?
c
@friend_requests
c
n
c
 !current_user.friendships.exists?(friend_id:@user)
@user
 !current_user.friendships.exists?(friend_id:@user)
current_user.friendships
!current_user.friendships.exists?(friend_id:@user)
!current_user.friendships.exists?(friend_id:@user
!current_user.friendships.exists?
user_signed_in?
c
friend_requests
q
end
c
ccc
c
n
c
cc
c
n
c
link_to image_tag("add-icon.png"), glis_support_path
link_to image_tag("email-icon.png"), inbox_notifications_path
<%= link_to image_tag("add-icon.png"), glis_support_path, :id=> "add-user-btn" %>
