c
params[:showinfancy]
params[:showinfancy[
params
c
params
c
params
c
params
c
params
c
data
params
c
action_name
page.action
action
c
action_name
action_ame
c
@user_supporters
c
cc
c
cc
c
action_name
self.action
self
action
action== "profile"
params
current_user
User.find(8)
user.id
User.find(9)
current_user.id
c
user.id
@user.id
current_user.id
c
User.where(id: Friendship.where(friend_id: current_user.id ).pluck(:user_id)    ).count
User.where(id: Friendship.where(friend_id: current_user.id ).pluck(:user_id)    )
c
@user_supporters
c
s
c
 @user_supporters
 user_signed_in?
c
 user_signed_in?
c
n
current_user.full_name.present?
user_signed_in?
c
current_user
user
c
 @user.id
current_user.id
c
user
c
n
User.where(id: Friendship.where(friend_id: current_user.id ).pluck(:user_id)    ).count
User.where(id: Friendship.where(friend_id: current_user.id ).pluck(:user_id)    )
c
@user.id 
Friendship.where(friend_id: @user.id )
Friendship.where(friend_id: @user.id ).pluck(:user_id)
 User.where(id: Friendship.where(friend_id: @user.id ).pluck(:user_id)    )
c
user
user.image
user
c
n
current_user.id == @user.id
 @user.id
current_user.id 
current_user
c
exit
@user
@usr
current_user
current_user.id
@user.id
@user
current_user
@user.id
current_user.id
current_user.id == @user.id 
current_user.id = @user.id 
@user
current_user
c
@user
user_id
current_user.friendships.uniq.count
current_user.friendships.uniq.coun
c
(Friendship.where(friend_id: @user.id )).pluck(:user_id)
(Friendship.where(friend_id: @user.id )).pluck(:friend_id)
(Friendship.where(friend_id: @user.id )).pluck(:friend_id_
(Friendship.where(friend_id: @user.id )).friend_id
(Friendship.where(friend_id: @user.id )).count
(Friendship.where(friend_id: @user.id )).friend_id
(Friendship.where(friend_id: @user.id )).count
(Friendship.where(friend_id: @user.id ))
 (Friendship.where(friend_id: @user.id ))
 (Friendship.where(friend_id: @user.id )))
Friendship.where(friend_id: @user.id ).count
Friendship.where(friend_id: @user.id )
@user.id
c
Friendship.where(friend_id: 9).countc
Friendship.where(friend_id: 9).count
Friendship.all.count
Friendship.find_by_friend_id(9)
Friendship.find_by_friend_id(9).count
Friendship.find_by_friend_id(9)
Friendship.first
Friendship.last
Friendship.lst
Friendship.count
Friendship.all
clear
Friendship.all
Friendship.count
Friendship.find_by_friend_id(9)
Friendship.find_By_friend_id(9)
Friendship.find_By_friend{_id(9)
Friendship.all
Friendship.find_by_friend_id(@user.id)
Friendship.last
Friendship.count
Friendship.find_by_friend_id(@user.id).user_id 
Friendship.find_by_friend_id(@user.id).user_id )
riendship.find_by_friend_id(@user.id).user_id )
c
user.image
user
supporters
@user
c
n
c
n
m
n
c
n
Friendship.find_by_friend_id(@user.id).user_id
c
@user_supporters.count
@user_supporters
c
n
c
Friendship.find_by_friend_id(@user.id)
@user.id
Friendship.find_by_friend_id(9)
Friendship.all
Friendship.find_by_friend_id(@user.id)
c
@user_supporters
c
@user.friennships
@user
@firendships
@user.friendships
= @user.friendships.find_unremove_friend.uniq.reject { |user| user.user_id == @user.id }
c
@user_supporters
@user
@user.supporters
@user
@user.supporters
c
n
c
exit
@user
n
@user
n
params[:friend_id]
c
@user.friends
@user.friendships
@user.supporters
pp @user
@user
@user.friendships.uniq.count
@user.friends
@user.friendships
@user.firendships
@user
@user_supporters
@user
c
v
c
@user_supporters
@user.name
@user
c
params[:friend_id]
User.find(4)
Friendship.find_friend_by_user_and_friend_id(params[:user_id], params[:friend_id]).first
n
c
Friendship.last
current_user.id
user.user_id
c
@user_supporters.count
c
Friendship.last
current_user.friends
c
cc
c
xc
c
Friendship.last
Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, "false" )
c
Friendship.last
 Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, false )
exit
n
c
exit
c
exit
c
e
c
params[:user_id]
@user
user.id
user_id
user
Friendship.last
Friendship.where('user_id !=? AND accepted=? AND friend_id =? AND removed_friend!=?', current_user.id, 'approved', current_user.id, false )
current_user.friendships
c
 Friendship.where('removed_friend != true' )
